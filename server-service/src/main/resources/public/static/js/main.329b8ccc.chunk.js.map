{"version":3,"sources":["component/header.js","redux/constants.js","service/async.js","redux/actions.js","component/loginForm.js","component/evaluationButtons.js","component/timer.js","component/evaluation.js","component/welcome.js","redux/actionCreators.js","component/login.js","redux/reducer.js","redux/adminReducer.js","redux/store.js","service/serverSentEvent.js","component/admin/grid.js","component/admin/admin.js","App.js","index.js"],"names":["ConnectedHeader","connect","state","userState","reducer","props","className","Badge","title","selectedUser","name","type","onClick","localStorage","clear","window","location","reload","USER_LOGGED_IN","PRE_EVAL_SCORE","POST_EVAL_SCORE","POPULATE_TITLE","SELECTED_USER","POPULATE_USERS","PRE_EVAL_COMPLETED","POST_EVAL_COMPLETED","EVAL_QUESTIONS","POST_EVAL_CLICKED","PRE_EVAL_CLICKED","SELECTED_ADMIN_USER","URL","fetchPreEvalQuestion","a","axios","get","then","res","data","fetchPostEvalQuestion","fetchUsers","submitPreEval","submission","post","submitPostEval","fetchTitle","userLoggedInRequest","loggedInUser","evalQuestions","payload","populateUsers","populateTitle","LoginForm","Form","onSubmit","Group","clearButton","id","labelKey","onInputChange","text","e","console","log","options","placeholder","Button","variant","EvaluationButtons","onPreEvaluationButtonClick","disabled","isPreEvalCompleted","onPostEvaluationButtonClick","isPostEvalCompleted","Timer","minutes","seconds","Evaluation","MINS","SECS","saveToLocalStorage","key","value","setItem","loadFromLocalStorage","getItem","storedMins","storedSecs","initialMinute","initialSeconds","useState","disableButton","setDisableButton","setMinutes","setSeconds","useEffect","myInterval","setInterval","changedMins","changedSecs","clearInterval","onEvaluationSubmit","map","item","index","question","opt","onChange","onEvalChange","option","ConnectedWelcome","evalQuestionAnswers","event","questionAnswer","target","filter","eqa","questionId","isPreEvalClicked","isPostEvalClicked","preventDefault","dispatch","response","Login","setTimeout","userName","this","users","Component","ConnectedLogin","initialState","userRecords","rootReducer","combineReducers","action","find","user","adminReducer","updatedUserRecords","preEvalScoreData","userToUpdatePreScore","update","userId","recordsOnExcludingUserToPreEvalUpdate","preEvalScore","userRecordsAfterPreEvalScoreUpdate","postEvalScoreData","userToUpdatePostScore","recordsOnExcludingUserToPostEvalUpdate","postEvalScore","userRecordsAfterPostEvalScoreUpdate","persistedStore","stateStr","JSON","parse","undefined","error","store","createStore","applyMiddleware","thunk","logger","subscribe","stringify","getState","heartbeatEventHandler","userLoggedInEventHandler","preEvalCompletedEventHandler","postEvalCompletedEventHandler","UserGrid","columnDefs","headerName","field","sortable","style","height","rowData","adminState","ConnectedUserGrid","Admin","source","EventSource","addEventListener","connectServerAsync","ConnectedAdmin","App","exact","path","component","ConnectedApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.329b8ccc.chunk.js","sourcesContent":["import React, { Fragment } from \"react\";\r\nimport { Badge } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\n\r\nexport function Header(props) {\r\n\r\n    const onLogout = () => {\r\n        localStorage.clear();\r\n        window.location.reload();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"col-1 align-self-start\" >\r\n            </div>\r\n            <div className=\"col-9 mt-4\">\r\n                <p className=\"h1 text-center\">\r\n                    <Badge className=\"badge-secondary \">\r\n                        FX- {props.userState.title}\r\n                    </Badge>\r\n                </p>\r\n            </div>\r\n            <div className=\"col-2 mt-4\">\r\n                {props.userState.selectedUser.name &&\r\n                    <div>Hello\r\n                        <p className=\"h5\">{props.userState.selectedUser.name}</p>\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"btn btn-secondary\"\r\n                            onClick={onLogout}\r\n                        >\r\n                            Logout\r\n                        </button>\r\n                    </div>\r\n                }\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userState: state.reducer,\r\n    }\r\n}\r\n\r\nexport const ConnectedHeader = connect(mapStateToProps)(Header);\r\n","export const USER_LOGGED_IN = \"USER_LOGGED_IN\";\r\nexport const PRE_EVAL_SCORE = \"PRE_EVAL_SCORE\";\r\nexport const POST_EVAL_SCORE = \"POST_EVAL_SCORE\";\r\nexport const POPULATE_TITLE = \"POPULATE_TITLE\";\r\nexport const SELECTED_USER = \"SELECTED_USER\";\r\nexport const POPULATE_USERS = \"POPULATE_USERS\";\r\nexport const PRE_EVAL_COMPLETED = \"PRE_EVAL_COMPLETED\";\r\nexport const POST_EVAL_COMPLETED = \"POST_EVAL_COMPLETED\";\r\nexport const EVAL_QUESTIONS = \"EVAL_QUESTIONS\";\r\nexport const POST_EVAL_CLICKED = \"POST_EVAL_CLICKED\";\r\nexport const PRE_EVAL_CLICKED = \"PRE_EVAL_CLICKED\";\r\nexport const SELECTED_ADMIN_USER = \"SELECTED_ADMIN_USER\";\r\n\r\nexport const URL = \"http://localhost:8080\"\r\nexport const PRE_TYPE=\"PRE_EVAL\"\r\nexport const POST_TYPE=\"POST_EVAL\"","import axios from \"axios\";\r\nimport { URL } from \"../redux/constants\";\r\n\r\nexport const fetchPreEvalQuestion = async () => {\r\n   return  await axios.get(URL+'/preEvalQuestions').then(res => res.data);\r\n}\r\n\r\nexport const fetchPostEvalQuestion = async () => {\r\n    return await axios.get(URL+'/preEvalQuestions').then(res => res.data);\r\n}\r\n\r\nexport const fetchUsers = async () => {\r\n    return await axios.get(URL+'/users').then(res => res.data);\r\n}\r\n\r\nexport const submitPreEval = async (submission) => {\r\n    return await axios.post(URL+'/preEvalSubmission',submission);\r\n}\r\n\r\nexport const submitPostEval = async (submission) => {\r\n    return await axios.post(URL+'/postEvalSubmission',submission);\r\n}\r\n\r\nexport const fetchTitle = async () => {\r\n    return await axios.get(URL+'/title').then(res => res.data);\r\n}\r\n\r\nexport const userLoggedInRequest = async (loggedInUser) => {\r\n     await axios.post(URL+'/userLoggedIn',loggedInUser);\r\n}\r\n\r\n\r\n\r\n\r\n","import { EVAL_QUESTIONS, POPULATE_TITLE, POPULATE_USERS, POST_EVAL_CLICKED, POST_EVAL_COMPLETED, POST_EVAL_SCORE, PRE_EVAL_CLICKED, PRE_EVAL_COMPLETED, PRE_EVAL_SCORE, SELECTED_ADMIN_USER, SELECTED_USER, USER_LOGGED_IN } from \"./constants\"\r\n\r\nexport const preEvalClicked = (payload) => ({\r\n    type: PRE_EVAL_CLICKED,\r\n    payload\r\n})\r\n\r\nexport const postEvalClicked = (payload) => ({\r\n    type: POST_EVAL_CLICKED,\r\n    payload\r\n})\r\n\r\nexport const evalQuestions = (payload) => ({\r\n    type: EVAL_QUESTIONS,\r\n    payload\r\n})\r\n\r\n\r\nexport const preEvalCompleted = (payload) => ({\r\n    type: PRE_EVAL_COMPLETED,\r\n    payload\r\n})\r\n\r\nexport const postEvalCompleted = (payload) => ({\r\n    type: POST_EVAL_COMPLETED,\r\n    payload\r\n})\r\n\r\nexport const populateUsers = (payload) => ({\r\n    type: POPULATE_USERS,\r\n    payload\r\n})\r\n\r\nexport const selectedUser = (payload) => ({\r\n    type: SELECTED_USER,\r\n    payload\r\n})\r\n\r\nexport const populateTitle = (payload) => ({\r\n    type: POPULATE_TITLE,\r\n    payload\r\n})\r\n\r\nexport const userLoggedIn = (payload) => ({\r\n    type: USER_LOGGED_IN,\r\n    payload\r\n})\r\n\r\nexport const preEvalScore = (payload) => ({\r\n    type: PRE_EVAL_SCORE,\r\n    payload\r\n})\r\n\r\nexport const postEvalScore = (payload) => ({\r\n    type: POST_EVAL_SCORE,\r\n    payload\r\n})\r\n\r\nexport const selectedAdminUser = (payload) => ({\r\n    type: SELECTED_ADMIN_USER,\r\n    payload\r\n})\r\n\r\n","import \"react-bootstrap-typeahead/css/Typeahead.css\"\r\nimport React from \"react\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport { Typeahead } from \"react-bootstrap-typeahead\";\r\n\r\nexport default function LoginForm(props) {\r\n\r\n    return (\r\n        <Form onSubmit={props.onSubmit}>\r\n            <Form.Group>\r\n                {/* <Form.Control type=\"name\" size=\"lg\" name=\"name\" placeholder=\"Enter Name\" /> */}\r\n                <Typeahead\r\n                    clearButton            \r\n                    id=\"user\"\r\n                    labelKey=\"name\"\r\n                    onInputChange={(text, e) => { console.log(text, e); }}\r\n                    options={props.options}\r\n                    placeholder=\"Select your name...\"\r\n  />\r\n            </Form.Group>\r\n            <Form.Group className=\"align-self-center\">\r\n                <Button variant=\"primary\" type=\"submit\">\r\n                    Go\r\n                </Button>\r\n            </Form.Group>\r\n        </Form>\r\n    );\r\n}","import React, { Fragment } from \"react\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\n\r\nexport default function EvaluationButtons(props) {\r\n\r\n    return (\r\n        <>\r\n            <Form>\r\n                <Form.Group>\r\n                    <Button className=\"pl-5 pr-5\" variant=\"primary\" type=\"submit\"\r\n                        onClick={props.onPreEvaluationButtonClick}\r\n                        disabled={props.isPreEvalCompleted}\r\n                    >\r\n                        Pre-Evaluation\r\n                    </Button>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Button className=\"pl-5 pr-5\" variant=\"primary\" type=\"submit\"\r\n                        onClick={props.onPostEvaluationButtonClick}\r\n                        disabled={props.isPostEvalCompleted}\r\n                    >\r\n                        Post-Evaluation\r\n                    </Button>\r\n                </Form.Group>\r\n            </Form>\r\n        </>\r\n    );\r\n}","import React from \"react\";\r\n\r\n\r\nexport default function Timer(props) {\r\n    const {minutes, seconds} = props;\r\n\r\n    return (\r\n        <div>\r\n        { minutes === 0 && seconds === 0\r\n            ? <h1>{`0${minutes}`}:{`0${seconds}`}</h1>\r\n            : <h1> {minutes < 10 ?  `0${minutes}` : minutes}:{seconds < 10 ?  `0${seconds}` : seconds}</h1> \r\n        }\r\n        </div>\r\n    )\r\n\r\n}","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport Timer from \"./timer\";\r\n\r\nexport default function Evaluation(props) {\r\n\r\n    const MINS = \"mins\"\r\n    const SECS = \"secs\"\r\n    const saveToLocalStorage = (key, value) => localStorage.setItem(key, value);\r\n    const loadFromLocalStorage = (key) => localStorage.getItem(key);\r\n    const storedMins = loadFromLocalStorage(MINS);\r\n    const storedSecs = loadFromLocalStorage(SECS);   \r\n    const initialMinute = (storedMins === \"undefined\" || storedMins === \"null\" || !storedMins )  ? 10 : storedMins;\r\n    const initialSeconds = (storedSecs === \"undefined\" || storedSecs === \"null\"  || !storedSecs) ? 0 : storedSecs;\r\n\tconst [disableButton, setDisableButton] = useState(false);\r\n    const [minutes, setMinutes] = useState(initialMinute);\r\n    const [seconds, setSeconds] = useState(initialSeconds);\r\n\r\n    useEffect(() => {\r\n        let myInterval = setInterval(() => {\r\n            let changedMins = minutes;\r\n            let changedSecs = seconds;\r\n            if (seconds > 0) {\r\n                changedSecs = seconds - 1\r\n            }\r\n            if (seconds === 0) {\r\n                if (minutes === 0) {\r\n                    clearInterval(myInterval)\r\n                    props.setDisableButton(true);\r\n                } else {\r\n                    changedMins = minutes - 1\r\n                    changedSecs = 59\r\n                }\r\n            }\r\n            saveToLocalStorage(MINS, changedMins);\r\n            saveToLocalStorage(SECS, changedSecs);\r\n            setMinutes(changedMins);\r\n            setSeconds(changedSecs);\r\n        }, 1000)\r\n        return () => {\r\n            clearInterval(myInterval);\r\n        };\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <div className=\"col-10\">\r\n                <form onSubmit={props.onEvaluationSubmit}>\r\n                    {props.evalQuestions.map((item, index) => {\r\n                        return (<Form.Group className=\"mt-2 ml-5\" key={item.id}>\r\n                            <h3><span className=\"badge badge-info w-11\" >{item.question}</span></h3>\r\n                            {item.options.map((opt, index) => (\r\n                                <div className=\"form-check\" key={opt.id}>\r\n                                    <input className=\"form-check-input\" type=\"radio\" name={item.id} value={opt.id} onChange={props.onEvalChange} />\r\n                                    <label className=\"form-check-label font-weight-bold\">\r\n                                        {opt.option}\r\n                                    </label>\r\n                                </div>\r\n                            )\r\n                            )}\r\n                        </Form.Group >)\r\n                    })}\r\n                    <Form.Group className=\"mt-2 ml-5\">\r\n                        <Button variant=\"dark\" type=\"submit\" disabled={disableButton}>\r\n                            Submit\r\n                        </Button>\r\n                    </Form.Group>\r\n                </form>\r\n            </div>\r\n            <div className=\"col-2\">\r\n                <Timer minutes={minutes} seconds={seconds} setDisableButton={setDisableButton} />\r\n            </div>\r\n        </>\r\n    );\r\n\r\n}","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport EvaluationButtons from \"./evaluationButtons\";\r\nimport { preEvalClicked, postEvalClicked, preEvalCompleted, postEvalCompleted } from \"../redux/actions\";\r\nimport Evaluation from \"./evaluation\";\r\nimport { postEvalQuestionActionCreator, preEvalQuestionActionCreator } from \"../redux/actionCreators\";\r\nimport { submitPostEval, submitPreEval } from \"../service/async\";\r\nimport { POST_TYPE, PRE_TYPE } from \"../redux/constants\";\r\n\r\nexport default function Welcome(props) {\r\n\r\n    var evalQuestionAnswers = [];\r\n\r\n    const onPreEvaluationButtonClick = (event) => {\r\n        event.preventDefault();\r\n        props.dispatch(preEvalClicked(true));\r\n        props.dispatch(preEvalQuestionActionCreator());\r\n    }\r\n\r\n    const onPostEvaluationButtonClick = (event) => {\r\n        event.preventDefault();\r\n        props.dispatch(postEvalClicked(true));\r\n        props.dispatch(postEvalQuestionActionCreator());\r\n    }\r\n\r\n    const onPreEvaluationSubmitButtonClick = (event) => {\r\n        event.preventDefault();\r\n        const submission = {\r\n            \"userId\": props.userState.selectedUser.id,\r\n            \"questionAnswers\": evalQuestionAnswers\r\n        }\r\n        submitPreEval(submission).then(response => props.dispatch(preEvalCompleted(true)))\r\n    }\r\n\r\n    const onEvalChange = (event) => {\r\n        const questionAnswer = {\r\n            \"questionId\": event.target.name,\r\n            \"answerId\": event.target.value\r\n        }\r\n        evalQuestionAnswers = evalQuestionAnswers.filter(eqa => eqa.questionId !== questionAnswer.questionId);\r\n        evalQuestionAnswers = [\r\n            ...evalQuestionAnswers,\r\n            questionAnswer\r\n        ]\r\n    }\r\n\r\n    const onPostEvaluationSubmitButtonClick = (event) => {\r\n        event.preventDefault();\r\n        debugger;\r\n        const submission = {\r\n            \"userId\": props.userState.selectedUser.id,\r\n            \"questionAnswers\": evalQuestionAnswers\r\n        }\r\n        submitPostEval(submission).then(response => {\r\n            debugger;\r\n            props.dispatch(postEvalCompleted(true))\r\n        }\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"container-fluid workspace\">\r\n            {((!props.userState.isPreEvalClicked && !props.userState.isPostEvalClicked) || (props.userState.isPreEvalCompleted && props.userState.isPostEvalCompleted)) &&\r\n                <div className=\"row\">\r\n                    <div className=\"col-11 text-center\">\r\n                        <EvaluationButtons\r\n                            onPreEvaluationButtonClick={onPreEvaluationButtonClick}\r\n                            onPostEvaluationButtonClick={onPostEvaluationButtonClick}\r\n                            isPreEvalCompleted={props.userState.isPreEvalCompleted}\r\n                            isPostEvalCompleted={props.userState.isPostEvalCompleted}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            }\r\n            <div className=\"row\">\r\n                {\r\n                    props.userState.isPreEvalClicked && !props.userState.isPreEvalCompleted &&\r\n                    <Evaluation\r\n                        evalQuestions={props.userState.evalQuestions}\r\n                        onEvaluationSubmit={onPreEvaluationSubmitButtonClick}\r\n                        onEvalChange={onEvalChange}\r\n                        type={PRE_TYPE} />\r\n                }\r\n                {\r\n                    props.userState.isPostEvalClicked && !props.userState.isPostEvalCompleted &&\r\n                    <Evaluation\r\n                        evalQuestions={props.userState.evalQuestions}\r\n                        onEvaluationSubmit={onPostEvaluationSubmitButtonClick}\r\n                        onEvalChange={onEvalChange}\r\n                        type={POST_TYPE} />\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userState: state.reducer,\r\n    }\r\n}\r\n\r\nexport const ConnectedWelcome = connect(mapStateToProps)(Welcome);","import { fetchPostEvalQuestion, fetchPreEvalQuestion } from \"../service/async\";\r\nimport { evalQuestions } from \"./actions\"\r\n\r\nexport const preEvalQuestionActionCreator = () => {\r\n    return (dispatch) => {\r\n        fetchPreEvalQuestion().then(response => {\r\n            dispatch(evalQuestions(response));\r\n        })\r\n    }\r\n}\r\n\r\nexport const postEvalQuestionActionCreator = () => {\r\n    return (dispatch) => {\r\n        fetchPostEvalQuestion().then(response => {\r\n            dispatch(evalQuestions(response));\r\n        })\r\n    }\r\n\r\n}","import React, { Component, Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchTitle, fetchUsers, userLoggedInRequest } from \"../service/async\";\r\nimport { selectedUser, populateUsers, populateTitle } from \"../redux/actions\";\r\nimport LoginForm from \"./loginForm\";\r\nimport { ConnectedWelcome } from \"./welcome\";\r\n\r\nclass Login extends Component {\r\n\r\n    onSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.props.dispatch(selectedUser(event.target[0].value))\r\n        setTimeout(() => {\r\n            userLoggedInRequest(this.props.userState.selectedUser);\r\n        }, 5)\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetchUsers().then(response => this.props.dispatch(populateUsers(response)))\r\n        fetchTitle().then(response => this.props.dispatch(populateTitle(response)))\r\n    }\r\n\r\n    render() {\r\n        const userName = this.props.userState.selectedUser.name;\r\n        return (\r\n            <>\r\n                <div className=\"container-fluid workspace\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-3\">\r\n                        </div>\r\n                        <div className=\"col-5\">\r\n                            {!userName &&\r\n                                <LoginForm onSubmit={this.onSubmit} options={this.props.userState.users} />\r\n                            }\r\n                        </div>\r\n                        <div className=\"col-4\"></div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        {userName &&\r\n                            <ConnectedWelcome />\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userState: state.reducer,\r\n    }\r\n}\r\n\r\nexport const ConnectedLogin = connect(mapStateToProps)(Login);\r\n","import { EVAL_QUESTIONS, POPULATE_TITLE, POPULATE_USERS, POST_EVAL_CLICKED, POST_EVAL_COMPLETED, PRE_EVAL_CLICKED, PRE_EVAL_COMPLETED, SELECTED_ADMIN_USER, SELECTED_USER } from \"./constants\";\r\n\r\nconst initialState = {\r\n    isPreEvalClicked: false,\r\n    isPostEvalClicked: false,\r\n    isPreEvalCompleted: false,\r\n    isPostEvalCompleted: false,\r\n    evalQuestions: [],\r\n    users: [],\r\n    selectedUser: {},\r\n    title: \"\"\r\n}\r\n\r\nexport const reducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case PRE_EVAL_CLICKED:\r\n            return { ...state, isPreEvalClicked: action.payload, isPostEvalClicked: false };\r\n        case POST_EVAL_CLICKED:\r\n            return { ...state, isPostEvalClicked: action.payload, isPreEvalClicked: false };\r\n        case PRE_EVAL_COMPLETED:\r\n            return { ...state, isPreEvalCompleted: action.payload, isPostEvalClicked: false, isPreEvalClicked: false };\r\n        case POST_EVAL_COMPLETED:\r\n            return { ...state, isPostEvalCompleted: action.payload, isPreEvalCompleted: true, isPreEvalClicked: false, isPostEvalClicked: false };\r\n        case EVAL_QUESTIONS:\r\n            return { ...state, evalQuestions: action.payload };\r\n        case POPULATE_USERS:\r\n            return { ...state, users: action.payload }\r\n        case POPULATE_TITLE:\r\n            return { ...state, title: action.payload }\r\n        case SELECTED_USER:\r\n            const selectedUser = state.users.find(user => user.name === action.payload);\r\n            return { ...state, selectedUser: selectedUser }\r\n        case SELECTED_ADMIN_USER:\r\n            return { ...state, selectedUser: action.payload }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { USER_LOGGED_IN, PRE_EVAL_SCORE, POST_EVAL_SCORE } from \"./constants\";\r\n\r\nconst initialState = {\r\n    userRecords: []\r\n}\r\n\r\n\r\nexport const adminReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case USER_LOGGED_IN:\r\n            const updatedUserRecords = [...state.userRecords, action.payload];\r\n            return { ...state, userRecords: updatedUserRecords }\r\n        case PRE_EVAL_SCORE:\r\n            const preEvalScoreData = action.payload;\r\n            let userToUpdatePreScore = state.userRecords.find(update => update.id === preEvalScoreData.userId);\r\n            const recordsOnExcludingUserToPreEvalUpdate = state.userRecords.filter(update => update.id !== preEvalScoreData.userId)\r\n            userToUpdatePreScore = {\r\n                ...userToUpdatePreScore,\r\n                \"preEvalStatus\": \"Completed\",\r\n                \"preEvalScore\": preEvalScoreData.preEvalScore\r\n            }\r\n            const userRecordsAfterPreEvalScoreUpdate = [...recordsOnExcludingUserToPreEvalUpdate, userToUpdatePreScore];\r\n            return { ...state, userRecords: userRecordsAfterPreEvalScoreUpdate }\r\n            case POST_EVAL_SCORE:\r\n                debugger;\r\n                const postEvalScoreData = action.payload;\r\n                let userToUpdatePostScore = state.userRecords.find(update => update.id === postEvalScoreData.userId);\r\n                const recordsOnExcludingUserToPostEvalUpdate = state.userRecords.filter(update => update.id !== postEvalScoreData.userId)\r\n                userToUpdatePostScore = {\r\n                    ...userToUpdatePostScore,\r\n                    \"postEvalStatus\": \"Completed\",\r\n                    \"postEvalScore\": postEvalScoreData.postEvalScore\r\n                }\r\n                const userRecordsAfterPostEvalScoreUpdate = [...recordsOnExcludingUserToPostEvalUpdate, userToUpdatePostScore];\r\n                return { ...state, userRecords: userRecordsAfterPostEvalScoreUpdate }\r\n    \r\n            default:\r\n            return state;\r\n    }\r\n}","import { applyMiddleware, createStore,combineReducers } from \"redux\";\r\nimport { reducer } from \"./reducer\";\r\nimport { adminReducer } from \"./adminReducer\";\r\nimport thunk from \"redux-thunk\";\r\nimport logger from \"redux-logger\";\r\n\r\nconst saveToLocalStorage = (state) => {\r\n    try {\r\n      localStorage.setItem('state', JSON.stringify(state));\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n  };\r\n  \r\n  const loadFromLocalStorage = () => {\r\n    try {\r\n      const stateStr = localStorage.getItem('state');\r\n      return stateStr ? JSON.parse(stateStr) : undefined;\r\n    } catch (e) {\r\n      console.error(e);\r\n      return undefined;\r\n    }\r\n  };\r\n  \r\n  const rootReducer = combineReducers({reducer, adminReducer})\r\n\r\n  const persistedStore = loadFromLocalStorage();\r\n  if(!persistedStore) {\r\n      //in some cases mins/secs of timer component as stored \r\n      localStorage.clear();\r\n  }\r\n  \r\n  const store = createStore(rootReducer, persistedStore, applyMiddleware(thunk,logger));\r\n  \r\n  store.subscribe(() => {\r\n    saveToLocalStorage(store.getState());\r\n  }); \r\n\r\nexport default store;","import { postEvalScore, preEvalScore, userLoggedIn } from '../redux/actions';\r\nimport { URL } from '../redux/constants';\r\nimport store from '../redux/store'\r\n\r\nexport const connectServerAsync = () => {\r\n    var source = new EventSource(URL + '/stream-flux');\r\n    source.addEventListener('HEARTBEAT_EVENT', heartbeatEventHandler, false);\r\n    source.addEventListener('USER_LOGGED_IN', userLoggedInEventHandler, false);\r\n    source.addEventListener('PRE_EVAL_COMPLETED', preEvalCompletedEventHandler, false);\r\n    source.addEventListener('POST_EVAL_COMPLETED', postEvalCompletedEventHandler, false);\r\n}\r\n\r\nexport const heartbeatEventHandler = (event) => {\r\n    // console.log(event.data);\r\n}\r\n\r\nexport const userLoggedInEventHandler = (event) => {\r\n    console.log(event)\r\n    store.dispatch(userLoggedIn(JSON.parse(event.data)));\r\n}\r\n\r\nexport const preEvalCompletedEventHandler = (event) => {\r\n    console.log(event)\r\n    store.dispatch(preEvalScore(JSON.parse(event.data)));\r\n}\r\n\r\nexport const postEvalCompletedEventHandler = (event) => {\r\n    console.log(event)\r\n    store.dispatch(postEvalScore(JSON.parse(event.data)));\r\n}","import 'ag-grid-community/dist/styles/ag-grid.css';\r\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\r\nimport React, { Component } from 'react'\r\nimport { AgGridReact } from 'ag-grid-react';\r\nimport { connect } from 'react-redux';\r\n\r\nclass UserGrid extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            columnDefs: [\r\n                { headerName: \"User\", field: \"name\", sortable: true, filter: true },\r\n                { headerName: \"Pre Evaluation\", field: \"preEvalStatus\", sortable: true, filter: true },\r\n                { headerName: \"Pre Evaluation Score\", field: \"preEvalScore\", sortable: true, filter: true },\r\n                { headerName: \"Post Evaluation\", field: \"postEvalStatus\", sortable: true, filter: true },\r\n                { headerName: \"Post Evaluation Score\", field: \"postEvalScore\", sortable: true, filter: true }\r\n            ]            \r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-9\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-body position-relative\">\r\n                                <div className=\"ag-theme-alpine\" style={{ height: \"550px\" }}>\r\n                                    <AgGridReact\r\n                                        columnDefs={this.state.columnDefs}\r\n                                        rowData={this.props.adminState.userRecords}\r\n                                    >\r\n                                    </AgGridReact>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        adminState: state.adminReducer,\r\n    }\r\n}\r\n\r\nexport const ConnectedUserGrid = connect(mapStateToProps)(UserGrid);","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchTitle, fetchUsers } from \"../../service/async\";\r\nimport { populateTitle, populateUsers, selectedAdminUser } from \"../../redux/actions\";\r\nimport { connectServerAsync } from \"../../service/serverSentEvent\";\r\nimport { ConnectedUserGrid } from \"./grid\";\r\n\r\nclass Admin extends Component {\r\n\r\n\r\n    componentDidMount() {\r\n        fetchUsers().then(response => this.props.dispatch(populateUsers(response)))\r\n        fetchTitle().then(response => this.props.dispatch(populateTitle(response))) \r\n        this.props.dispatch(selectedAdminUser({\r\n            \"id\": \"0001\",\r\n            \"name\": \"Admin\"\r\n        }))  \r\n        connectServerAsync()            \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <ConnectedUserGrid />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userState: state.reducer,\r\n        adminState : state.adminReducer\r\n    }\r\n}\r\n\r\nexport const ConnectedAdmin = connect(mapStateToProps)(Admin);\r\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './App.css';\nimport { ConnectedHeader } from './component/header';\nimport { ConnectedLogin } from './component/login';\nimport { Switch, Route } from 'react-router';\nimport { ConnectedAdmin } from './component/admin/admin';\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div className=\"container-fluid App\">\n        <div className=\"row mb-5\">\n          <ConnectedHeader />\n        </div>\n        <div className=\"row p-2\">\n          <Switch>\n            <Route exact path=\"/fx-admin-gui\" component={ConnectedAdmin} />\n            <Route path=\"/\" component={ConnectedLogin} />\n          </Switch>\n        </div>\n      </div >\n\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    state: state\n  }\n}\n\nexport const ConnectedApp = connect(mapStateToProps)(App);","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { ConnectedApp } from './App';\nimport store from './redux/store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <ConnectedApp />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}